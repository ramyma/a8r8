# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Elixir CI

on:
  push:
    branches: ["release-test"]
  # pull_request:
  #   branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    env:
      MIX_ENV: prod
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9
          run_install: false
          package_json_file: assets/package.json

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
          cache-dependency-path: assets/pnpm-lock.yaml

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: "1.17.2" # [Required] Define the Elixir version
          otp-version: "27.0.1" # [Required] Define the Erlang/OTP version
      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-
      - name: Restore build lib cache
        uses: actions/cache@v4
        with:
          path: _build/prod/lib
          key: ${{ runner.os }}-build-lib
      - name: Install dependencies
        run: mix deps.get --only prod
      - name: Install deps
        run: pnpm -C assets install
      - name: Build assets
        run: pnpm -C assets build
      - name: Compile
        run: mix compile
      - name: Digest assests
        run: mix phx.digest
      - name: Create mix release
        run: mix release --overwrite
      - name: Compress build
        run: tar -I 'zstd --ultra -22'  -cf A8R8_ubuntu-22-04.tar.zst  _build/prod/
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ubuntu-22.04-build
          path: A8R8_ubuntu-22-04.tar.zst
          retention-days: 5
          overwrite: true

    # - name: Run tests
    #   run: mix test
  create_draft_release_with_assets:
    name: Create draft release w/ assets
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: ubuntu-22.04-build
          path: .
      - name: Show available files
        run: ls
      - name: Create draft release
        uses: softprops/action-gh-release@v2
        with:
          files: A8R8_ubuntu-22-04.tar.zst
          target_commitish: main
          draft: true
          token: ${{ secrets.GH_TOKEN }}
      # - name: Create draft release
      #   id: create_release
      #   run: |
      #     release_id=$(curl -L \
      #     -X POST \
      #     -H "Accept: application/vnd.github+json" \
      #     -H "Authorization: Bearer ${{ github.token }}" \
      #     -H "X-GitHub-Api-Version: 2022-11-28" \
      #     https://api.github.com/repos/${{ github.repository }}/releases \
      #     -d '{"tag_name":"draft_release","target_commitish":"main","name":"draft_release","body":"Auto generated draft release","draft":true,"prerelease":false,"generate_release_notes":false}'); \
      #     echo "release_id=$(echo $release_id | jq '.id')" >> $GITHUB_OUTPUT

      # - name: Show draft release ID
      #   run: echo ${{ steps.create_release.outputs.release_id }}
      # - name: Upload asset to draft release
      #   run: |
      #     curl -i -L \
      #       -X POST \
      #       -H "Accept: application/vnd.github+json" \
      #       -H "Authorization: Bearer ${{ github.token }}" \
      #       -H "X-GitHub-Api-Version: 2022-11-28" \
      #       -H "Content-Type: application/octet-stream" \
      #       "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.release_id }}/assets?name=A8R8_ubuntu-22-04.tar.zst" \
      #       --data-binary "@A8R8_ubuntu-22-04.tar.zst"
